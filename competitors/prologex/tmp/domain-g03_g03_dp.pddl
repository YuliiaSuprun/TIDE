(define (domain 'domain-g03')
  (:predicates
    (machine-configured-p1)
    (machine-configured-p2)
    (machine-configured-p3)
    (machine-configured-p4)
    (machine-configured-p5)
    (stacks-avail-n1)
    (started-o1)
    (started-o2)
    (started-o3)
    (started-o4)
    (started-o5)
    (stacks-avail-n2)
    (made-p1)
    (made-p2)
    (made-p3)
    (made-p4)
    (made-p5)
    (shipped-o1)
    (stacks-avail-n3)
    (stacks-avail-n4)
    (stacks-avail-n5)
    (shipped-o2)
    (shipped-o3)
    (shipped-o4)
    (shipped-o5)
    (not-made-p5)
    (not-made-p4)
    (not-made-p3)
    (not-made-p2)
    (not-made-p1)
    (waiting-o5)
    (waiting-o4)
    (waiting-o3)
    (waiting-o2)
    (waiting-o1)
    (machine-available)
    (stacks-avail-n0)
    (f_copy)
    (f_sync)
    (f_world)
    (f_ok)
    (f_goal)
    (q_1)
    (q_1s)
    (q_1t)
    (q_2)
    (q_2s)
    (q_2t)
    (q_3)
    (q_3s)
    (q_3t)
    (q_4)
    (q_4s)
    (q_4t)
    (q_5)
    (q_5s)
    (q_5t)
    (q_6)
    (q_6s)
    (q_6t)
    (q_7)
    (q_7s)
    (q_7t)
    (q_8)
    (q_8s)
    (q_8t)
    (q_9)
    (q_9s)
    (q_9t)
    (q_10)
    (q_10s)
    (q_10t)
    (q_11)
    (q_11s)
    (q_11t)
    (q_12)
    (q_12s)
    (q_12t)
    (q_13)
    (q_13s)
    (q_13t)
    (q_14)
    (q_14s)
    (q_14t)
    (q_15)
    (q_15s)
    (q_15t)
    (q_16)
    (q_16s)
    (q_16t)
    (q_17)
    (q_17s)
    (q_17t)
    (q_18)
    (q_18s)
    (q_18t)
  )
  (:action make-product-p5-n5
    :parameters ()
    :precondition 
      (and
        (machine-configured-p5)
        (started-o4)
        (started-o3)
        (stacks-avail-n5)
        (f_ok)
        (f_world))
    :effect
      (and
        (made-p5)
        (machine-available)
        (f_copy)
        (not 
          (not-made-p5))
        (not 
          (machine-configured-p5))
        (not 
          (f_world))
      )
    )
  (:action make-product-p5-n4
    :parameters ()
    :precondition 
      (and
        (machine-configured-p5)
        (started-o4)
        (started-o3)
        (stacks-avail-n4)
        (f_ok)
        (f_world))
    :effect
      (and
        (made-p5)
        (machine-available)
        (f_copy)
        (not 
          (not-made-p5))
        (not 
          (machine-configured-p5))
        (not 
          (f_world))
      )
    )
  (:action make-product-p5-n3
    :parameters ()
    :precondition 
      (and
        (machine-configured-p5)
        (started-o4)
        (started-o3)
        (stacks-avail-n3)
        (f_ok)
        (f_world))
    :effect
      (and
        (made-p5)
        (machine-available)
        (f_copy)
        (not 
          (not-made-p5))
        (not 
          (machine-configured-p5))
        (not 
          (f_world))
      )
    )
  (:action make-product-p4-n5
    :parameters ()
    :precondition 
      (and
        (machine-configured-p4)
        (started-o5)
        (started-o2)
        (stacks-avail-n5)
        (f_ok)
        (f_world))
    :effect
      (and
        (made-p4)
        (machine-available)
        (f_copy)
        (not 
          (not-made-p4))
        (not 
          (machine-configured-p4))
        (not 
          (f_world))
      )
    )
  (:action make-product-p4-n4
    :parameters ()
    :precondition 
      (and
        (machine-configured-p4)
        (started-o5)
        (started-o2)
        (stacks-avail-n4)
        (f_ok)
        (f_world))
    :effect
      (and
        (made-p4)
        (machine-available)
        (f_copy)
        (not 
          (not-made-p4))
        (not 
          (machine-configured-p4))
        (not 
          (f_world))
      )
    )
  (:action make-product-p4-n3
    :parameters ()
    :precondition 
      (and
        (machine-configured-p4)
        (started-o5)
        (started-o2)
        (stacks-avail-n3)
        (f_ok)
        (f_world))
    :effect
      (and
        (made-p4)
        (machine-available)
        (f_copy)
        (not 
          (not-made-p4))
        (not 
          (machine-configured-p4))
        (not 
          (f_world))
      )
    )
  (:action make-product-p3-n5
    :parameters ()
    :precondition 
      (and
        (machine-configured-p3)
        (started-o4)
        (started-o2)
        (stacks-avail-n5)
        (f_ok)
        (f_world))
    :effect
      (and
        (made-p3)
        (machine-available)
        (f_copy)
        (not 
          (not-made-p3))
        (not 
          (machine-configured-p3))
        (not 
          (f_world))
      )
    )
  (:action make-product-p3-n4
    :parameters ()
    :precondition 
      (and
        (machine-configured-p3)
        (started-o4)
        (started-o2)
        (stacks-avail-n4)
        (f_ok)
        (f_world))
    :effect
      (and
        (made-p3)
        (machine-available)
        (f_copy)
        (not 
          (not-made-p3))
        (not 
          (machine-configured-p3))
        (not 
          (f_world))
      )
    )
  (:action make-product-p3-n3
    :parameters ()
    :precondition 
      (and
        (machine-configured-p3)
        (started-o4)
        (started-o2)
        (stacks-avail-n3)
        (f_ok)
        (f_world))
    :effect
      (and
        (made-p3)
        (machine-available)
        (f_copy)
        (not 
          (not-made-p3))
        (not 
          (machine-configured-p3))
        (not 
          (f_world))
      )
    )
  (:action make-product-p2-n5
    :parameters ()
    :precondition 
      (and
        (machine-configured-p2)
        (started-o5)
        (started-o1)
        (stacks-avail-n5)
        (f_ok)
        (f_world))
    :effect
      (and
        (made-p2)
        (machine-available)
        (f_copy)
        (not 
          (not-made-p2))
        (not 
          (machine-configured-p2))
        (not 
          (f_world))
      )
    )
  (:action make-product-p2-n4
    :parameters ()
    :precondition 
      (and
        (machine-configured-p2)
        (started-o5)
        (started-o1)
        (stacks-avail-n4)
        (f_ok)
        (f_world))
    :effect
      (and
        (made-p2)
        (machine-available)
        (f_copy)
        (not 
          (not-made-p2))
        (not 
          (machine-configured-p2))
        (not 
          (f_world))
      )
    )
  (:action make-product-p2-n3
    :parameters ()
    :precondition 
      (and
        (machine-configured-p2)
        (started-o5)
        (started-o1)
        (stacks-avail-n3)
        (f_ok)
        (f_world))
    :effect
      (and
        (made-p2)
        (machine-available)
        (f_copy)
        (not 
          (not-made-p2))
        (not 
          (machine-configured-p2))
        (not 
          (f_world))
      )
    )
  (:action make-product-p1-n5
    :parameters ()
    :precondition 
      (and
        (machine-configured-p1)
        (started-o3)
        (started-o1)
        (stacks-avail-n5)
        (f_ok)
        (f_world))
    :effect
      (and
        (made-p1)
        (machine-available)
        (f_copy)
        (not 
          (not-made-p1))
        (not 
          (machine-configured-p1))
        (not 
          (f_world))
      )
    )
  (:action make-product-p1-n4
    :parameters ()
    :precondition 
      (and
        (machine-configured-p1)
        (started-o3)
        (started-o1)
        (stacks-avail-n4)
        (f_ok)
        (f_world))
    :effect
      (and
        (made-p1)
        (machine-available)
        (f_copy)
        (not 
          (not-made-p1))
        (not 
          (machine-configured-p1))
        (not 
          (f_world))
      )
    )
  (:action make-product-p1-n3
    :parameters ()
    :precondition 
      (and
        (machine-configured-p1)
        (started-o3)
        (started-o1)
        (stacks-avail-n3)
        (f_ok)
        (f_world))
    :effect
      (and
        (made-p1)
        (machine-available)
        (f_copy)
        (not 
          (not-made-p1))
        (not 
          (machine-configured-p1))
        (not 
          (f_world))
      )
    )
  (:action open-new-stack-n2-n3
    :parameters ()
    :precondition 
      (and
        (stacks-avail-n2)
        (f_ok)
        (f_world))
    :effect
      (and
        (stacks-avail-n3)
        (f_copy)
        (not 
          (stacks-avail-n2))
        (not 
          (f_world))
      )
    )
  (:action open-new-stack-n3-n4
    :parameters ()
    :precondition 
      (and
        (stacks-avail-n3)
        (f_ok)
        (f_world))
    :effect
      (and
        (stacks-avail-n4)
        (f_copy)
        (not 
          (stacks-avail-n3))
        (not 
          (f_world))
      )
    )
  (:action open-new-stack-n4-n5
    :parameters ()
    :precondition 
      (and
        (stacks-avail-n4)
        (f_ok)
        (f_world))
    :effect
      (and
        (stacks-avail-n5)
        (f_copy)
        (not 
          (stacks-avail-n4))
        (not 
          (f_world))
      )
    )
  (:action start-order-o5-n2-n1
    :parameters ()
    :precondition 
      (and
        (stacks-avail-n2)
        (waiting-o5)
        (f_ok)
        (f_world))
    :effect
      (and
        (started-o5)
        (stacks-avail-n1)
        (f_copy)
        (not 
          (waiting-o5))
        (not 
          (stacks-avail-n2))
        (not 
          (f_world))
      )
    )
  (:action start-order-o4-n2-n1
    :parameters ()
    :precondition 
      (and
        (stacks-avail-n2)
        (waiting-o4)
        (f_ok)
        (f_world))
    :effect
      (and
        (started-o4)
        (stacks-avail-n1)
        (f_copy)
        (not 
          (waiting-o4))
        (not 
          (stacks-avail-n2))
        (not 
          (f_world))
      )
    )
  (:action start-order-o3-n2-n1
    :parameters ()
    :precondition 
      (and
        (stacks-avail-n2)
        (waiting-o3)
        (f_ok)
        (f_world))
    :effect
      (and
        (started-o3)
        (stacks-avail-n1)
        (f_copy)
        (not 
          (waiting-o3))
        (not 
          (stacks-avail-n2))
        (not 
          (f_world))
      )
    )
  (:action start-order-o2-n2-n1
    :parameters ()
    :precondition 
      (and
        (stacks-avail-n2)
        (waiting-o2)
        (f_ok)
        (f_world))
    :effect
      (and
        (started-o2)
        (stacks-avail-n1)
        (f_copy)
        (not 
          (waiting-o2))
        (not 
          (stacks-avail-n2))
        (not 
          (f_world))
      )
    )
  (:action start-order-o1-n2-n1
    :parameters ()
    :precondition 
      (and
        (stacks-avail-n2)
        (waiting-o1)
        (f_ok)
        (f_world))
    :effect
      (and
        (started-o1)
        (stacks-avail-n1)
        (f_copy)
        (not 
          (waiting-o1))
        (not 
          (stacks-avail-n2))
        (not 
          (f_world))
      )
    )
  (:action start-order-o5-n3-n2
    :parameters ()
    :precondition 
      (and
        (stacks-avail-n3)
        (waiting-o5)
        (f_ok)
        (f_world))
    :effect
      (and
        (started-o5)
        (stacks-avail-n2)
        (f_copy)
        (not 
          (waiting-o5))
        (not 
          (stacks-avail-n3))
        (not 
          (f_world))
      )
    )
  (:action start-order-o4-n3-n2
    :parameters ()
    :precondition 
      (and
        (stacks-avail-n3)
        (waiting-o4)
        (f_ok)
        (f_world))
    :effect
      (and
        (started-o4)
        (stacks-avail-n2)
        (f_copy)
        (not 
          (waiting-o4))
        (not 
          (stacks-avail-n3))
        (not 
          (f_world))
      )
    )
  (:action start-order-o3-n3-n2
    :parameters ()
    :precondition 
      (and
        (stacks-avail-n3)
        (waiting-o3)
        (f_ok)
        (f_world))
    :effect
      (and
        (started-o3)
        (stacks-avail-n2)
        (f_copy)
        (not 
          (waiting-o3))
        (not 
          (stacks-avail-n3))
        (not 
          (f_world))
      )
    )
  (:action start-order-o2-n3-n2
    :parameters ()
    :precondition 
      (and
        (stacks-avail-n3)
        (waiting-o2)
        (f_ok)
        (f_world))
    :effect
      (and
        (started-o2)
        (stacks-avail-n2)
        (f_copy)
        (not 
          (waiting-o2))
        (not 
          (stacks-avail-n3))
        (not 
          (f_world))
      )
    )
  (:action start-order-o1-n3-n2
    :parameters ()
    :precondition 
      (and
        (stacks-avail-n3)
        (waiting-o1)
        (f_ok)
        (f_world))
    :effect
      (and
        (started-o1)
        (stacks-avail-n2)
        (f_copy)
        (not 
          (waiting-o1))
        (not 
          (stacks-avail-n3))
        (not 
          (f_world))
      )
    )
  (:action start-order-o5-n4-n3
    :parameters ()
    :precondition 
      (and
        (stacks-avail-n4)
        (waiting-o5)
        (f_ok)
        (f_world))
    :effect
      (and
        (started-o5)
        (stacks-avail-n3)
        (f_copy)
        (not 
          (waiting-o5))
        (not 
          (stacks-avail-n4))
        (not 
          (f_world))
      )
    )
  (:action start-order-o4-n4-n3
    :parameters ()
    :precondition 
      (and
        (stacks-avail-n4)
        (waiting-o4)
        (f_ok)
        (f_world))
    :effect
      (and
        (started-o4)
        (stacks-avail-n3)
        (f_copy)
        (not 
          (waiting-o4))
        (not 
          (stacks-avail-n4))
        (not 
          (f_world))
      )
    )
  (:action start-order-o3-n4-n3
    :parameters ()
    :precondition 
      (and
        (stacks-avail-n4)
        (waiting-o3)
        (f_ok)
        (f_world))
    :effect
      (and
        (started-o3)
        (stacks-avail-n3)
        (f_copy)
        (not 
          (waiting-o3))
        (not 
          (stacks-avail-n4))
        (not 
          (f_world))
      )
    )
  (:action start-order-o2-n4-n3
    :parameters ()
    :precondition 
      (and
        (stacks-avail-n4)
        (waiting-o2)
        (f_ok)
        (f_world))
    :effect
      (and
        (started-o2)
        (stacks-avail-n3)
        (f_copy)
        (not 
          (waiting-o2))
        (not 
          (stacks-avail-n4))
        (not 
          (f_world))
      )
    )
  (:action start-order-o1-n4-n3
    :parameters ()
    :precondition 
      (and
        (stacks-avail-n4)
        (waiting-o1)
        (f_ok)
        (f_world))
    :effect
      (and
        (started-o1)
        (stacks-avail-n3)
        (f_copy)
        (not 
          (waiting-o1))
        (not 
          (stacks-avail-n4))
        (not 
          (f_world))
      )
    )
  (:action start-order-o5-n5-n4
    :parameters ()
    :precondition 
      (and
        (stacks-avail-n5)
        (waiting-o5)
        (f_ok)
        (f_world))
    :effect
      (and
        (started-o5)
        (stacks-avail-n4)
        (f_copy)
        (not 
          (waiting-o5))
        (not 
          (stacks-avail-n5))
        (not 
          (f_world))
      )
    )
  (:action start-order-o4-n5-n4
    :parameters ()
    :precondition 
      (and
        (stacks-avail-n5)
        (waiting-o4)
        (f_ok)
        (f_world))
    :effect
      (and
        (started-o4)
        (stacks-avail-n4)
        (f_copy)
        (not 
          (waiting-o4))
        (not 
          (stacks-avail-n5))
        (not 
          (f_world))
      )
    )
  (:action start-order-o3-n5-n4
    :parameters ()
    :precondition 
      (and
        (stacks-avail-n5)
        (waiting-o3)
        (f_ok)
        (f_world))
    :effect
      (and
        (started-o3)
        (stacks-avail-n4)
        (f_copy)
        (not 
          (waiting-o3))
        (not 
          (stacks-avail-n5))
        (not 
          (f_world))
      )
    )
  (:action start-order-o2-n5-n4
    :parameters ()
    :precondition 
      (and
        (stacks-avail-n5)
        (waiting-o2)
        (f_ok)
        (f_world))
    :effect
      (and
        (started-o2)
        (stacks-avail-n4)
        (f_copy)
        (not 
          (waiting-o2))
        (not 
          (stacks-avail-n5))
        (not 
          (f_world))
      )
    )
  (:action start-order-o1-n5-n4
    :parameters ()
    :precondition 
      (and
        (stacks-avail-n5)
        (waiting-o1)
        (f_ok)
        (f_world))
    :effect
      (and
        (started-o1)
        (stacks-avail-n4)
        (f_copy)
        (not 
          (waiting-o1))
        (not 
          (stacks-avail-n5))
        (not 
          (f_world))
      )
    )
  (:action setup-machine-p5-n5
    :parameters ()
    :precondition 
      (and
        (stacks-avail-n5)
        (not-made-p5)
        (machine-available)
        (f_ok)
        (f_world))
    :effect
      (and
        (machine-configured-p5)
        (f_copy)
        (not 
          (machine-available))
        (not 
          (f_world))
      )
    )
  (:action setup-machine-p5-n4
    :parameters ()
    :precondition 
      (and
        (stacks-avail-n4)
        (not-made-p5)
        (machine-available)
        (f_ok)
        (f_world))
    :effect
      (and
        (machine-configured-p5)
        (f_copy)
        (not 
          (machine-available))
        (not 
          (f_world))
      )
    )
  (:action setup-machine-p5-n3
    :parameters ()
    :precondition 
      (and
        (stacks-avail-n3)
        (not-made-p5)
        (machine-available)
        (f_ok)
        (f_world))
    :effect
      (and
        (machine-configured-p5)
        (f_copy)
        (not 
          (machine-available))
        (not 
          (f_world))
      )
    )
  (:action setup-machine-p5-n2
    :parameters ()
    :precondition 
      (and
        (stacks-avail-n2)
        (not-made-p5)
        (machine-available)
        (f_ok)
        (f_world))
    :effect
      (and
        (machine-configured-p5)
        (f_copy)
        (not 
          (machine-available))
        (not 
          (f_world))
      )
    )
  (:action setup-machine-p4-n5
    :parameters ()
    :precondition 
      (and
        (stacks-avail-n5)
        (not-made-p4)
        (machine-available)
        (f_ok)
        (f_world))
    :effect
      (and
        (machine-configured-p4)
        (f_copy)
        (not 
          (machine-available))
        (not 
          (f_world))
      )
    )
  (:action setup-machine-p4-n4
    :parameters ()
    :precondition 
      (and
        (stacks-avail-n4)
        (not-made-p4)
        (machine-available)
        (f_ok)
        (f_world))
    :effect
      (and
        (machine-configured-p4)
        (f_copy)
        (not 
          (machine-available))
        (not 
          (f_world))
      )
    )
  (:action setup-machine-p4-n3
    :parameters ()
    :precondition 
      (and
        (stacks-avail-n3)
        (not-made-p4)
        (machine-available)
        (f_ok)
        (f_world))
    :effect
      (and
        (machine-configured-p4)
        (f_copy)
        (not 
          (machine-available))
        (not 
          (f_world))
      )
    )
  (:action setup-machine-p4-n2
    :parameters ()
    :precondition 
      (and
        (stacks-avail-n2)
        (not-made-p4)
        (machine-available)
        (f_ok)
        (f_world))
    :effect
      (and
        (machine-configured-p4)
        (f_copy)
        (not 
          (machine-available))
        (not 
          (f_world))
      )
    )
  (:action setup-machine-p3-n5
    :parameters ()
    :precondition 
      (and
        (stacks-avail-n5)
        (not-made-p3)
        (machine-available)
        (f_ok)
        (f_world))
    :effect
      (and
        (machine-configured-p3)
        (f_copy)
        (not 
          (machine-available))
        (not 
          (f_world))
      )
    )
  (:action setup-machine-p3-n4
    :parameters ()
    :precondition 
      (and
        (stacks-avail-n4)
        (not-made-p3)
        (machine-available)
        (f_ok)
        (f_world))
    :effect
      (and
        (machine-configured-p3)
        (f_copy)
        (not 
          (machine-available))
        (not 
          (f_world))
      )
    )
  (:action setup-machine-p3-n3
    :parameters ()
    :precondition 
      (and
        (stacks-avail-n3)
        (not-made-p3)
        (machine-available)
        (f_ok)
        (f_world))
    :effect
      (and
        (machine-configured-p3)
        (f_copy)
        (not 
          (machine-available))
        (not 
          (f_world))
      )
    )
  (:action setup-machine-p3-n2
    :parameters ()
    :precondition 
      (and
        (stacks-avail-n2)
        (not-made-p3)
        (machine-available)
        (f_ok)
        (f_world))
    :effect
      (and
        (machine-configured-p3)
        (f_copy)
        (not 
          (machine-available))
        (not 
          (f_world))
      )
    )
  (:action setup-machine-p2-n5
    :parameters ()
    :precondition 
      (and
        (stacks-avail-n5)
        (not-made-p2)
        (machine-available)
        (f_ok)
        (f_world))
    :effect
      (and
        (machine-configured-p2)
        (f_copy)
        (not 
          (machine-available))
        (not 
          (f_world))
      )
    )
  (:action setup-machine-p2-n4
    :parameters ()
    :precondition 
      (and
        (stacks-avail-n4)
        (not-made-p2)
        (machine-available)
        (f_ok)
        (f_world))
    :effect
      (and
        (machine-configured-p2)
        (f_copy)
        (not 
          (machine-available))
        (not 
          (f_world))
      )
    )
  (:action setup-machine-p2-n3
    :parameters ()
    :precondition 
      (and
        (stacks-avail-n3)
        (not-made-p2)
        (machine-available)
        (f_ok)
        (f_world))
    :effect
      (and
        (machine-configured-p2)
        (f_copy)
        (not 
          (machine-available))
        (not 
          (f_world))
      )
    )
  (:action setup-machine-p2-n2
    :parameters ()
    :precondition 
      (and
        (stacks-avail-n2)
        (not-made-p2)
        (machine-available)
        (f_ok)
        (f_world))
    :effect
      (and
        (machine-configured-p2)
        (f_copy)
        (not 
          (machine-available))
        (not 
          (f_world))
      )
    )
  (:action setup-machine-p1-n5
    :parameters ()
    :precondition 
      (and
        (stacks-avail-n5)
        (not-made-p1)
        (machine-available)
        (f_ok)
        (f_world))
    :effect
      (and
        (machine-configured-p1)
        (f_copy)
        (not 
          (machine-available))
        (not 
          (f_world))
      )
    )
  (:action setup-machine-p1-n4
    :parameters ()
    :precondition 
      (and
        (stacks-avail-n4)
        (not-made-p1)
        (machine-available)
        (f_ok)
        (f_world))
    :effect
      (and
        (machine-configured-p1)
        (f_copy)
        (not 
          (machine-available))
        (not 
          (f_world))
      )
    )
  (:action setup-machine-p1-n3
    :parameters ()
    :precondition 
      (and
        (stacks-avail-n3)
        (not-made-p1)
        (machine-available)
        (f_ok)
        (f_world))
    :effect
      (and
        (machine-configured-p1)
        (f_copy)
        (not 
          (machine-available))
        (not 
          (f_world))
      )
    )
  (:action setup-machine-p1-n2
    :parameters ()
    :precondition 
      (and
        (stacks-avail-n2)
        (not-made-p1)
        (machine-available)
        (f_ok)
        (f_world))
    :effect
      (and
        (machine-configured-p1)
        (f_copy)
        (not 
          (machine-available))
        (not 
          (f_world))
      )
    )
  (:action ship-order-o5-n4-n5
    :parameters ()
    :precondition 
      (and
        (started-o5)
        (made-p4)
        (made-p2)
        (stacks-avail-n4)
        (f_ok)
        (f_world))
    :effect
      (and
        (stacks-avail-n5)
        (shipped-o5)
        (f_copy)
        (not 
          (stacks-avail-n4))
        (not 
          (started-o5))
        (not 
          (f_world))
      )
    )
  (:action ship-order-o5-n3-n4
    :parameters ()
    :precondition 
      (and
        (started-o5)
        (made-p4)
        (made-p2)
        (stacks-avail-n3)
        (f_ok)
        (f_world))
    :effect
      (and
        (stacks-avail-n4)
        (shipped-o5)
        (f_copy)
        (not 
          (stacks-avail-n3))
        (not 
          (started-o5))
        (not 
          (f_world))
      )
    )
  (:action ship-order-o5-n2-n3
    :parameters ()
    :precondition 
      (and
        (started-o5)
        (made-p4)
        (made-p2)
        (stacks-avail-n2)
        (f_ok)
        (f_world))
    :effect
      (and
        (stacks-avail-n3)
        (shipped-o5)
        (f_copy)
        (not 
          (stacks-avail-n2))
        (not 
          (started-o5))
        (not 
          (f_world))
      )
    )
  (:action ship-order-o5-n1-n2
    :parameters ()
    :precondition 
      (and
        (started-o5)
        (made-p4)
        (made-p2)
        (stacks-avail-n1)
        (f_ok)
        (f_world))
    :effect
      (and
        (stacks-avail-n2)
        (shipped-o5)
        (f_copy)
        (not 
          (stacks-avail-n1))
        (not 
          (started-o5))
        (not 
          (f_world))
      )
    )
  (:action ship-order-o5-n0-n1
    :parameters ()
    :precondition 
      (and
        (started-o5)
        (made-p4)
        (made-p2)
        (stacks-avail-n0)
        (f_ok)
        (f_world))
    :effect
      (and
        (stacks-avail-n1)
        (shipped-o5)
        (f_copy)
        (not 
          (stacks-avail-n0))
        (not 
          (started-o5))
        (not 
          (f_world))
      )
    )
  (:action ship-order-o4-n4-n5
    :parameters ()
    :precondition 
      (and
        (started-o4)
        (made-p5)
        (made-p3)
        (stacks-avail-n4)
        (f_ok)
        (f_world))
    :effect
      (and
        (stacks-avail-n5)
        (shipped-o4)
        (f_copy)
        (not 
          (stacks-avail-n4))
        (not 
          (started-o4))
        (not 
          (f_world))
      )
    )
  (:action ship-order-o4-n3-n4
    :parameters ()
    :precondition 
      (and
        (started-o4)
        (made-p5)
        (made-p3)
        (stacks-avail-n3)
        (f_ok)
        (f_world))
    :effect
      (and
        (stacks-avail-n4)
        (shipped-o4)
        (f_copy)
        (not 
          (stacks-avail-n3))
        (not 
          (started-o4))
        (not 
          (f_world))
      )
    )
  (:action ship-order-o4-n2-n3
    :parameters ()
    :precondition 
      (and
        (started-o4)
        (made-p5)
        (made-p3)
        (stacks-avail-n2)
        (f_ok)
        (f_world))
    :effect
      (and
        (stacks-avail-n3)
        (shipped-o4)
        (f_copy)
        (not 
          (stacks-avail-n2))
        (not 
          (started-o4))
        (not 
          (f_world))
      )
    )
  (:action ship-order-o4-n1-n2
    :parameters ()
    :precondition 
      (and
        (started-o4)
        (made-p5)
        (made-p3)
        (stacks-avail-n1)
        (f_ok)
        (f_world))
    :effect
      (and
        (stacks-avail-n2)
        (shipped-o4)
        (f_copy)
        (not 
          (stacks-avail-n1))
        (not 
          (started-o4))
        (not 
          (f_world))
      )
    )
  (:action ship-order-o4-n0-n1
    :parameters ()
    :precondition 
      (and
        (started-o4)
        (made-p5)
        (made-p3)
        (stacks-avail-n0)
        (f_ok)
        (f_world))
    :effect
      (and
        (stacks-avail-n1)
        (shipped-o4)
        (f_copy)
        (not 
          (stacks-avail-n0))
        (not 
          (started-o4))
        (not 
          (f_world))
      )
    )
  (:action ship-order-o3-n4-n5
    :parameters ()
    :precondition 
      (and
        (started-o3)
        (made-p5)
        (made-p1)
        (stacks-avail-n4)
        (f_ok)
        (f_world))
    :effect
      (and
        (stacks-avail-n5)
        (shipped-o3)
        (f_copy)
        (not 
          (stacks-avail-n4))
        (not 
          (started-o3))
        (not 
          (f_world))
      )
    )
  (:action ship-order-o3-n3-n4
    :parameters ()
    :precondition 
      (and
        (started-o3)
        (made-p5)
        (made-p1)
        (stacks-avail-n3)
        (f_ok)
        (f_world))
    :effect
      (and
        (stacks-avail-n4)
        (shipped-o3)
        (f_copy)
        (not 
          (stacks-avail-n3))
        (not 
          (started-o3))
        (not 
          (f_world))
      )
    )
  (:action ship-order-o3-n2-n3
    :parameters ()
    :precondition 
      (and
        (started-o3)
        (made-p5)
        (made-p1)
        (stacks-avail-n2)
        (f_ok)
        (f_world))
    :effect
      (and
        (stacks-avail-n3)
        (shipped-o3)
        (f_copy)
        (not 
          (stacks-avail-n2))
        (not 
          (started-o3))
        (not 
          (f_world))
      )
    )
  (:action ship-order-o3-n1-n2
    :parameters ()
    :precondition 
      (and
        (started-o3)
        (made-p5)
        (made-p1)
        (stacks-avail-n1)
        (f_ok)
        (f_world))
    :effect
      (and
        (stacks-avail-n2)
        (shipped-o3)
        (f_copy)
        (not 
          (stacks-avail-n1))
        (not 
          (started-o3))
        (not 
          (f_world))
      )
    )
  (:action ship-order-o3-n0-n1
    :parameters ()
    :precondition 
      (and
        (started-o3)
        (made-p5)
        (made-p1)
        (stacks-avail-n0)
        (f_ok)
        (f_world))
    :effect
      (and
        (stacks-avail-n1)
        (shipped-o3)
        (f_copy)
        (not 
          (stacks-avail-n0))
        (not 
          (started-o3))
        (not 
          (f_world))
      )
    )
  (:action ship-order-o2-n4-n5
    :parameters ()
    :precondition 
      (and
        (started-o2)
        (made-p4)
        (made-p3)
        (stacks-avail-n4)
        (f_ok)
        (f_world))
    :effect
      (and
        (stacks-avail-n5)
        (shipped-o2)
        (f_copy)
        (not 
          (stacks-avail-n4))
        (not 
          (started-o2))
        (not 
          (f_world))
      )
    )
  (:action ship-order-o2-n3-n4
    :parameters ()
    :precondition 
      (and
        (started-o2)
        (made-p4)
        (made-p3)
        (stacks-avail-n3)
        (f_ok)
        (f_world))
    :effect
      (and
        (stacks-avail-n4)
        (shipped-o2)
        (f_copy)
        (not 
          (stacks-avail-n3))
        (not 
          (started-o2))
        (not 
          (f_world))
      )
    )
  (:action ship-order-o2-n2-n3
    :parameters ()
    :precondition 
      (and
        (started-o2)
        (made-p4)
        (made-p3)
        (stacks-avail-n2)
        (f_ok)
        (f_world))
    :effect
      (and
        (stacks-avail-n3)
        (shipped-o2)
        (f_copy)
        (not 
          (stacks-avail-n2))
        (not 
          (started-o2))
        (not 
          (f_world))
      )
    )
  (:action ship-order-o2-n1-n2
    :parameters ()
    :precondition 
      (and
        (started-o2)
        (made-p4)
        (made-p3)
        (stacks-avail-n1)
        (f_ok)
        (f_world))
    :effect
      (and
        (stacks-avail-n2)
        (shipped-o2)
        (f_copy)
        (not 
          (stacks-avail-n1))
        (not 
          (started-o2))
        (not 
          (f_world))
      )
    )
  (:action ship-order-o2-n0-n1
    :parameters ()
    :precondition 
      (and
        (started-o2)
        (made-p4)
        (made-p3)
        (stacks-avail-n0)
        (f_ok)
        (f_world))
    :effect
      (and
        (stacks-avail-n1)
        (shipped-o2)
        (f_copy)
        (not 
          (stacks-avail-n0))
        (not 
          (started-o2))
        (not 
          (f_world))
      )
    )
  (:action ship-order-o1-n4-n5
    :parameters ()
    :precondition 
      (and
        (started-o1)
        (made-p2)
        (made-p1)
        (stacks-avail-n4)
        (f_ok)
        (f_world))
    :effect
      (and
        (stacks-avail-n5)
        (shipped-o1)
        (f_copy)
        (not 
          (stacks-avail-n4))
        (not 
          (started-o1))
        (not 
          (f_world))
      )
    )
  (:action ship-order-o1-n3-n4
    :parameters ()
    :precondition 
      (and
        (started-o1)
        (made-p2)
        (made-p1)
        (stacks-avail-n3)
        (f_ok)
        (f_world))
    :effect
      (and
        (stacks-avail-n4)
        (shipped-o1)
        (f_copy)
        (not 
          (stacks-avail-n3))
        (not 
          (started-o1))
        (not 
          (f_world))
      )
    )
  (:action ship-order-o1-n2-n3
    :parameters ()
    :precondition 
      (and
        (started-o1)
        (made-p2)
        (made-p1)
        (stacks-avail-n2)
        (f_ok)
        (f_world))
    :effect
      (and
        (stacks-avail-n3)
        (shipped-o1)
        (f_copy)
        (not 
          (stacks-avail-n2))
        (not 
          (started-o1))
        (not 
          (f_world))
      )
    )
  (:action ship-order-o1-n1-n2
    :parameters ()
    :precondition 
      (and
        (started-o1)
        (made-p2)
        (made-p1)
        (stacks-avail-n1)
        (f_ok)
        (f_world))
    :effect
      (and
        (stacks-avail-n2)
        (shipped-o1)
        (f_copy)
        (not 
          (stacks-avail-n1))
        (not 
          (started-o1))
        (not 
          (f_world))
      )
    )
  (:action ship-order-o1-n0-n1
    :parameters ()
    :precondition 
      (and
        (started-o1)
        (made-p2)
        (made-p1)
        (stacks-avail-n0)
        (f_ok)
        (f_world))
    :effect
      (and
        (stacks-avail-n1)
        (shipped-o1)
        (f_copy)
        (not 
          (stacks-avail-n0))
        (not 
          (started-o1))
        (not 
          (f_world))
      )
    )
  (:action make-product-p5-n2
    :parameters ()
    :precondition 
      (and
        (machine-configured-p5)
        (started-o4)
        (started-o3)
        (stacks-avail-n2)
        (f_ok)
        (f_world))
    :effect
      (and
        (made-p5)
        (machine-available)
        (f_copy)
        (not 
          (not-made-p5))
        (not 
          (machine-configured-p5))
        (not 
          (f_world))
      )
    )
  (:action make-product-p5-n1
    :parameters ()
    :precondition 
      (and
        (machine-configured-p5)
        (started-o4)
        (started-o3)
        (stacks-avail-n1)
        (f_ok)
        (f_world))
    :effect
      (and
        (made-p5)
        (machine-available)
        (f_copy)
        (not 
          (not-made-p5))
        (not 
          (machine-configured-p5))
        (not 
          (f_world))
      )
    )
  (:action make-product-p5-n0
    :parameters ()
    :precondition 
      (and
        (machine-configured-p5)
        (started-o4)
        (started-o3)
        (stacks-avail-n0)
        (f_ok)
        (f_world))
    :effect
      (and
        (made-p5)
        (machine-available)
        (f_copy)
        (not 
          (not-made-p5))
        (not 
          (machine-configured-p5))
        (not 
          (f_world))
      )
    )
  (:action make-product-p4-n2
    :parameters ()
    :precondition 
      (and
        (machine-configured-p4)
        (started-o5)
        (started-o2)
        (stacks-avail-n2)
        (f_ok)
        (f_world))
    :effect
      (and
        (made-p4)
        (machine-available)
        (f_copy)
        (not 
          (not-made-p4))
        (not 
          (machine-configured-p4))
        (not 
          (f_world))
      )
    )
  (:action make-product-p4-n1
    :parameters ()
    :precondition 
      (and
        (machine-configured-p4)
        (started-o5)
        (started-o2)
        (stacks-avail-n1)
        (f_ok)
        (f_world))
    :effect
      (and
        (made-p4)
        (machine-available)
        (f_copy)
        (not 
          (not-made-p4))
        (not 
          (machine-configured-p4))
        (not 
          (f_world))
      )
    )
  (:action make-product-p4-n0
    :parameters ()
    :precondition 
      (and
        (machine-configured-p4)
        (started-o5)
        (started-o2)
        (stacks-avail-n0)
        (f_ok)
        (f_world))
    :effect
      (and
        (made-p4)
        (machine-available)
        (f_copy)
        (not 
          (not-made-p4))
        (not 
          (machine-configured-p4))
        (not 
          (f_world))
      )
    )
  (:action make-product-p3-n2
    :parameters ()
    :precondition 
      (and
        (machine-configured-p3)
        (started-o4)
        (started-o2)
        (stacks-avail-n2)
        (f_ok)
        (f_world))
    :effect
      (and
        (made-p3)
        (machine-available)
        (f_copy)
        (not 
          (not-made-p3))
        (not 
          (machine-configured-p3))
        (not 
          (f_world))
      )
    )
  (:action make-product-p3-n1
    :parameters ()
    :precondition 
      (and
        (machine-configured-p3)
        (started-o4)
        (started-o2)
        (stacks-avail-n1)
        (f_ok)
        (f_world))
    :effect
      (and
        (made-p3)
        (machine-available)
        (f_copy)
        (not 
          (not-made-p3))
        (not 
          (machine-configured-p3))
        (not 
          (f_world))
      )
    )
  (:action make-product-p3-n0
    :parameters ()
    :precondition 
      (and
        (machine-configured-p3)
        (started-o4)
        (started-o2)
        (stacks-avail-n0)
        (f_ok)
        (f_world))
    :effect
      (and
        (made-p3)
        (machine-available)
        (f_copy)
        (not 
          (not-made-p3))
        (not 
          (machine-configured-p3))
        (not 
          (f_world))
      )
    )
  (:action make-product-p2-n2
    :parameters ()
    :precondition 
      (and
        (machine-configured-p2)
        (started-o5)
        (started-o1)
        (stacks-avail-n2)
        (f_ok)
        (f_world))
    :effect
      (and
        (made-p2)
        (machine-available)
        (f_copy)
        (not 
          (not-made-p2))
        (not 
          (machine-configured-p2))
        (not 
          (f_world))
      )
    )
  (:action make-product-p2-n1
    :parameters ()
    :precondition 
      (and
        (machine-configured-p2)
        (started-o5)
        (started-o1)
        (stacks-avail-n1)
        (f_ok)
        (f_world))
    :effect
      (and
        (made-p2)
        (machine-available)
        (f_copy)
        (not 
          (not-made-p2))
        (not 
          (machine-configured-p2))
        (not 
          (f_world))
      )
    )
  (:action make-product-p2-n0
    :parameters ()
    :precondition 
      (and
        (machine-configured-p2)
        (started-o5)
        (started-o1)
        (stacks-avail-n0)
        (f_ok)
        (f_world))
    :effect
      (and
        (made-p2)
        (machine-available)
        (f_copy)
        (not 
          (not-made-p2))
        (not 
          (machine-configured-p2))
        (not 
          (f_world))
      )
    )
  (:action make-product-p1-n2
    :parameters ()
    :precondition 
      (and
        (machine-configured-p1)
        (started-o3)
        (started-o1)
        (stacks-avail-n2)
        (f_ok)
        (f_world))
    :effect
      (and
        (made-p1)
        (machine-available)
        (f_copy)
        (not 
          (not-made-p1))
        (not 
          (machine-configured-p1))
        (not 
          (f_world))
      )
    )
  (:action make-product-p1-n1
    :parameters ()
    :precondition 
      (and
        (machine-configured-p1)
        (started-o3)
        (started-o1)
        (stacks-avail-n1)
        (f_ok)
        (f_world))
    :effect
      (and
        (made-p1)
        (machine-available)
        (f_copy)
        (not 
          (not-made-p1))
        (not 
          (machine-configured-p1))
        (not 
          (f_world))
      )
    )
  (:action make-product-p1-n0
    :parameters ()
    :precondition 
      (and
        (machine-configured-p1)
        (started-o3)
        (started-o1)
        (stacks-avail-n0)
        (f_ok)
        (f_world))
    :effect
      (and
        (made-p1)
        (machine-available)
        (f_copy)
        (not 
          (not-made-p1))
        (not 
          (machine-configured-p1))
        (not 
          (f_world))
      )
    )
  (:action open-new-stack-n1-n2
    :parameters ()
    :precondition 
      (and
        (stacks-avail-n1)
        (f_ok)
        (f_world))
    :effect
      (and
        (stacks-avail-n2)
        (f_copy)
        (not 
          (stacks-avail-n1))
        (not 
          (f_world))
      )
    )
  (:action start-order-o5-n1-n0
    :parameters ()
    :precondition 
      (and
        (stacks-avail-n1)
        (waiting-o5)
        (f_ok)
        (f_world))
    :effect
      (and
        (started-o5)
        (stacks-avail-n0)
        (f_copy)
        (not 
          (waiting-o5))
        (not 
          (stacks-avail-n1))
        (not 
          (f_world))
      )
    )
  (:action start-order-o4-n1-n0
    :parameters ()
    :precondition 
      (and
        (stacks-avail-n1)
        (waiting-o4)
        (f_ok)
        (f_world))
    :effect
      (and
        (started-o4)
        (stacks-avail-n0)
        (f_copy)
        (not 
          (waiting-o4))
        (not 
          (stacks-avail-n1))
        (not 
          (f_world))
      )
    )
  (:action start-order-o3-n1-n0
    :parameters ()
    :precondition 
      (and
        (stacks-avail-n1)
        (waiting-o3)
        (f_ok)
        (f_world))
    :effect
      (and
        (started-o3)
        (stacks-avail-n0)
        (f_copy)
        (not 
          (waiting-o3))
        (not 
          (stacks-avail-n1))
        (not 
          (f_world))
      )
    )
  (:action start-order-o2-n1-n0
    :parameters ()
    :precondition 
      (and
        (stacks-avail-n1)
        (waiting-o2)
        (f_ok)
        (f_world))
    :effect
      (and
        (started-o2)
        (stacks-avail-n0)
        (f_copy)
        (not 
          (waiting-o2))
        (not 
          (stacks-avail-n1))
        (not 
          (f_world))
      )
    )
  (:action start-order-o1-n1-n0
    :parameters ()
    :precondition 
      (and
        (stacks-avail-n1)
        (waiting-o1)
        (f_ok)
        (f_world))
    :effect
      (and
        (started-o1)
        (stacks-avail-n0)
        (f_copy)
        (not 
          (waiting-o1))
        (not 
          (stacks-avail-n1))
        (not 
          (f_world))
      )
    )
  (:action setup-machine-p5-n1
    :parameters ()
    :precondition 
      (and
        (stacks-avail-n1)
        (not-made-p5)
        (machine-available)
        (f_ok)
        (f_world))
    :effect
      (and
        (machine-configured-p5)
        (f_copy)
        (not 
          (machine-available))
        (not 
          (f_world))
      )
    )
  (:action setup-machine-p4-n1
    :parameters ()
    :precondition 
      (and
        (stacks-avail-n1)
        (not-made-p4)
        (machine-available)
        (f_ok)
        (f_world))
    :effect
      (and
        (machine-configured-p4)
        (f_copy)
        (not 
          (machine-available))
        (not 
          (f_world))
      )
    )
  (:action setup-machine-p3-n1
    :parameters ()
    :precondition 
      (and
        (stacks-avail-n1)
        (not-made-p3)
        (machine-available)
        (f_ok)
        (f_world))
    :effect
      (and
        (machine-configured-p3)
        (f_copy)
        (not 
          (machine-available))
        (not 
          (f_world))
      )
    )
  (:action setup-machine-p2-n1
    :parameters ()
    :precondition 
      (and
        (stacks-avail-n1)
        (not-made-p2)
        (machine-available)
        (f_ok)
        (f_world))
    :effect
      (and
        (machine-configured-p2)
        (f_copy)
        (not 
          (machine-available))
        (not 
          (f_world))
      )
    )
  (:action setup-machine-p1-n1
    :parameters ()
    :precondition 
      (and
        (stacks-avail-n1)
        (not-made-p1)
        (machine-available)
        (f_ok)
        (f_world))
    :effect
      (and
        (machine-configured-p1)
        (f_copy)
        (not 
          (machine-available))
        (not 
          (f_world))
      )
    )
  (:action open-new-stack-n0-n1
    :parameters ()
    :precondition 
      (and
        (stacks-avail-n0)
        (f_ok)
        (f_world))
    :effect
      (and
        (stacks-avail-n1)
        (f_copy)
        (not 
          (stacks-avail-n0))
        (not 
          (f_world))
      )
    )
  (:action setup-machine-p5-n0
    :parameters ()
    :precondition 
      (and
        (stacks-avail-n0)
        (not-made-p5)
        (machine-available)
        (f_ok)
        (f_world))
    :effect
      (and
        (machine-configured-p5)
        (f_copy)
        (not 
          (machine-available))
        (not 
          (f_world))
      )
    )
  (:action setup-machine-p4-n0
    :parameters ()
    :precondition 
      (and
        (stacks-avail-n0)
        (not-made-p4)
        (machine-available)
        (f_ok)
        (f_world))
    :effect
      (and
        (machine-configured-p4)
        (f_copy)
        (not 
          (machine-available))
        (not 
          (f_world))
      )
    )
  (:action setup-machine-p3-n0
    :parameters ()
    :precondition 
      (and
        (stacks-avail-n0)
        (not-made-p3)
        (machine-available)
        (f_ok)
        (f_world))
    :effect
      (and
        (machine-configured-p3)
        (f_copy)
        (not 
          (machine-available))
        (not 
          (f_world))
      )
    )
  (:action setup-machine-p2-n0
    :parameters ()
    :precondition 
      (and
        (stacks-avail-n0)
        (not-made-p2)
        (machine-available)
        (f_ok)
        (f_world))
    :effect
      (and
        (machine-configured-p2)
        (f_copy)
        (not 
          (machine-available))
        (not 
          (f_world))
      )
    )
  (:action setup-machine-p1-n0
    :parameters ()
    :precondition 
      (and
        (stacks-avail-n0)
        (not-made-p1)
        (machine-available)
        (f_ok)
        (f_world))
    :effect
      (and
        (machine-configured-p1)
        (f_copy)
        (not 
          (machine-available))
        (not 
          (f_world))
      )
    )
  (:action o_copy
    :parameters ()
    :precondition 
      (and
        (f_ok)
        (f_copy))
    :effect
      (and
        (f_sync)
        (q_1t)
        (when
          (q_1)
          (q_1s))
        (when
          (q_2)
          (q_2s))
        (when
          (q_3)
          (q_3s))
        (when
          (q_4)
          (q_4s))
        (when
          (q_5)
          (q_5s))
        (when
          (q_6)
          (q_6s))
        (when
          (q_7)
          (q_7s))
        (when
          (q_8)
          (q_8s))
        (when
          (q_9)
          (q_9s))
        (when
          (q_10)
          (q_10s))
        (when
          (q_11)
          (q_11s))
        (when
          (q_12)
          (q_12s))
        (when
          (q_13)
          (q_13s))
        (when
          (q_14)
          (q_14s))
        (when
          (q_15)
          (q_15s))
        (when
          (q_16)
          (q_16s))
        (when
          (q_17)
          (q_17s))
        (when
          (q_18)
          (q_18s))
        (not 
          (f_copy))
        (not 
          (q_1))
        (not 
          (q_2))
        (not 
          (q_3))
        (not 
          (q_4))
        (not 
          (q_5))
        (not 
          (q_6))
        (not 
          (q_7))
        (not 
          (q_8))
        (not 
          (q_9))
        (not 
          (q_10))
        (not 
          (q_11))
        (not 
          (q_12))
        (not 
          (q_13))
        (not 
          (q_14))
        (not 
          (q_15))
        (not 
          (q_16))
        (not 
          (q_17))
        (not 
          (q_18))
      )
    )
  (:action o_goal
    :parameters ()
    :precondition 
      (and
        (f_world)
        (f_ok)
        (not 
          (q_1))
        (not 
          (q_2))
        (not 
          (q_3))
        (not 
          (q_4))
        (not 
          (q_5))
        (not 
          (q_6))
        (not 
          (q_7))
        (not 
          (q_8))
        (not 
          (q_9))
        (not 
          (q_10))
        (not 
          (q_11))
        (not 
          (q_12))
        (not 
          (q_13))
        (not 
          (q_14))
        (not 
          (q_15))
        (not 
          (q_16))
        (not 
          (q_17)))
    :effect
(f_goal)    )
  (:action o_sync_q_1s
    :parameters ()
    :precondition 
      (and
        (f_sync)
        (f_ok)
        (q_1t))
    :effect
      (and
        (when
          (q_1s)
          (q_11s))
        (when
          (q_1s)
          (q_2s))
        (q_2t)
        (when
          (q_1s)
          (not 
            (q_1s)))
        (not 
          (q_1t))
      )
    )
  (:action o_sync_q_2s
    :parameters ()
    :precondition 
      (and
        (f_sync)
        (f_ok)
        (q_2t))
    :effect
      (and
        (when
          (q_2s)
          (q_10s))
        (when
          (q_2s)
          (q_3s))
        (q_3t)
        (when
          (q_2s)
          (not 
            (q_2s)))
        (not 
          (q_2t))
      )
    )
  (:action o_sync_q_3s
    :parameters ()
    :precondition 
      (and
        (f_sync)
        (f_ok)
        (q_3t))
    :effect
      (and
        (when
          (q_3s)
          (q_9s))
        (when
          (q_3s)
          (q_4s))
        (q_4t)
        (when
          (q_3s)
          (not 
            (q_3s)))
        (not 
          (q_3t))
      )
    )
  (:action o_sync_q_4s
    :parameters ()
    :precondition 
      (and
        (f_sync)
        (f_ok)
        (q_4t))
    :effect
      (and
        (when
          (q_4s)
          (q_6s))
        (when
          (q_4s)
          (q_5s))
        (q_5t)
        (when
          (q_4s)
          (not 
            (q_4s)))
        (not 
          (q_4t))
      )
    )
  (:action o_sync_q_5s_1
    :parameters ()
    :precondition 
      (and
        (f_sync)
        (f_ok)
        (q_5t))
    :effect
      (and
        (when
          (q_5s)
          (q_12s))
        (q_6t)
        (when
          (q_5s)
          (not 
            (q_5s)))
        (not 
          (q_5t))
      )
    )
  (:action o_sync_q_5s_2
    :parameters ()
    :precondition 
      (and
        (f_sync)
        (f_ok)
        (q_5t))
    :effect
      (and
        (when
          (q_5s)
          (q_7s))
        (when
          (q_5s)
          (q_5))
        (when
          (q_5s)
          (q_17))
        (q_6t)
        (when
          (q_5s)
          (not 
            (q_5s)))
        (not 
          (q_5t))
      )
    )
  (:action o_sync_q_6s_1
    :parameters ()
    :precondition 
      (and
        (f_sync)
        (f_ok)
        (q_6t))
    :effect
      (and
        (when
          (q_6s)
          (q_13s))
        (q_7t)
        (when
          (q_6s)
          (not 
            (q_6s)))
        (not 
          (q_6t))
      )
    )
  (:action o_sync_q_6s_2
    :parameters ()
    :precondition 
      (and
        (f_sync)
        (f_ok)
        (q_6t))
    :effect
      (and
        (when
          (q_6s)
          (q_8s))
        (when
          (q_6s)
          (q_6))
        (when
          (q_6s)
          (q_17))
        (q_7t)
        (when
          (q_6s)
          (not 
            (q_6s)))
        (not 
          (q_6t))
      )
    )
  (:action o_sync_q_7s
    :parameters ()
    :precondition 
      (and
        (f_sync)
        (f_ok)
        (q_7t))
    :effect
      (and
        (q_8t)
        (when
          (q_7s)
          (not 
            (q_7s)))
        (when
          (and
            (q_7s)
            (started-o2))
          (not 
            (f_ok)))
        (not 
          (q_7t))
      )
    )
  (:action o_sync_q_8s
    :parameters ()
    :precondition 
      (and
        (f_sync)
        (f_ok)
        (q_8t))
    :effect
      (and
        (q_9t)
        (when
          (q_8s)
          (not 
            (q_8s)))
        (when
          (and
            (q_8s)
            (started-o1))
          (not 
            (f_ok)))
        (not 
          (q_8t))
      )
    )
  (:action o_sync_q_9s_1
    :parameters ()
    :precondition 
      (and
        (f_sync)
        (f_ok)
        (q_9t))
    :effect
      (and
        (when
          (q_9s)
          (q_14s))
        (q_10t)
        (when
          (q_9s)
          (not 
            (q_9s)))
        (not 
          (q_9t))
      )
    )
  (:action o_sync_q_9s_2
    :parameters ()
    :precondition 
      (and
        (f_sync)
        (f_ok)
        (q_9t))
    :effect
      (and
        (when
          (q_9s)
          (q_17))
        (when
          (q_9s)
          (q_9))
        (q_10t)
        (when
          (q_9s)
          (not 
            (q_9s)))
        (not 
          (q_9t))
      )
    )
  (:action o_sync_q_10s_1
    :parameters ()
    :precondition 
      (and
        (f_sync)
        (f_ok)
        (q_10t))
    :effect
      (and
        (when
          (q_10s)
          (q_15s))
        (q_11t)
        (when
          (q_10s)
          (not 
            (q_10s)))
        (not 
          (q_10t))
      )
    )
  (:action o_sync_q_10s_2
    :parameters ()
    :precondition 
      (and
        (f_sync)
        (f_ok)
        (q_10t))
    :effect
      (and
        (when
          (q_10s)
          (q_17))
        (when
          (q_10s)
          (q_10))
        (q_11t)
        (when
          (q_10s)
          (not 
            (q_10s)))
        (not 
          (q_10t))
      )
    )
  (:action o_sync_q_11s_1
    :parameters ()
    :precondition 
      (and
        (f_sync)
        (f_ok)
        (q_11t))
    :effect
      (and
        (when
          (q_11s)
          (q_16s))
        (q_12t)
        (when
          (q_11s)
          (not 
            (q_11s)))
        (not 
          (q_11t))
      )
    )
  (:action o_sync_q_11s_2
    :parameters ()
    :precondition 
      (and
        (f_sync)
        (f_ok)
        (q_11t))
    :effect
      (and
        (when
          (q_11s)
          (q_17))
        (when
          (q_11s)
          (q_11))
        (q_12t)
        (when
          (q_11s)
          (not 
            (q_11s)))
        (not 
          (q_11t))
      )
    )
  (:action o_sync_q_12s
    :parameters ()
    :precondition 
      (and
        (f_sync)
        (f_ok)
        (q_12t))
    :effect
      (and
        (q_13t)
        (when
          (q_12s)
          (not 
            (q_12s)))
        (when
          (and
            (q_12s)
            (not 
              (started-o3)))
          (not 
            (f_ok)))
        (not 
          (q_12t))
      )
    )
  (:action o_sync_q_13s
    :parameters ()
    :precondition 
      (and
        (f_sync)
        (f_ok)
        (q_13t))
    :effect
      (and
        (q_14t)
        (when
          (q_13s)
          (not 
            (q_13s)))
        (when
          (and
            (q_13s)
            (not 
              (started-o2)))
          (not 
            (f_ok)))
        (not 
          (q_13t))
      )
    )
  (:action o_sync_q_14s
    :parameters ()
    :precondition 
      (and
        (f_sync)
        (f_ok)
        (q_14t))
    :effect
      (and
        (q_15t)
        (when
          (q_14s)
          (not 
            (q_14s)))
        (when
          (and
            (q_14s)
            (not 
              (shipped-o3)))
          (not 
            (f_ok)))
        (not 
          (q_14t))
      )
    )
  (:action o_sync_q_15s
    :parameters ()
    :precondition 
      (and
        (f_sync)
        (f_ok)
        (q_15t))
    :effect
      (and
        (q_16t)
        (when
          (q_15s)
          (not 
            (q_15s)))
        (when
          (and
            (q_15s)
            (not 
              (shipped-o2)))
          (not 
            (f_ok)))
        (not 
          (q_15t))
      )
    )
  (:action o_sync_q_16s
    :parameters ()
    :precondition 
      (and
        (f_sync)
        (f_ok)
        (q_16t))
    :effect
      (and
        (q_17t)
        (when
          (q_16s)
          (not 
            (q_16s)))
        (when
          (and
            (q_16s)
            (not 
              (shipped-o1)))
          (not 
            (f_ok)))
        (not 
          (q_16t))
      )
    )
  (:action o_sync_q_17s
    :parameters ()
    :precondition 
      (and
        (f_sync)
        (f_ok)
        (q_17t))
    :effect
      (and
        (q_18t)
        (when
          (q_17s)
          (not 
            (q_17s)))
        (not 
          (q_17t))
      )
    )
  (:action o_sync_q_18s
    :parameters ()
    :precondition 
      (and
        (f_sync)
        (f_ok)
        (q_18t))
    :effect
      (and
        (f_world)
        (when
          (q_1s)
          (q_1))
        (when
          (q_2s)
          (q_2))
        (when
          (q_3s)
          (q_3))
        (when
          (q_4s)
          (q_4))
        (when
          (q_5s)
          (q_5))
        (when
          (q_6s)
          (q_6))
        (when
          (q_7s)
          (q_7))
        (when
          (q_8s)
          (q_8))
        (when
          (q_9s)
          (q_9))
        (when
          (q_10s)
          (q_10))
        (when
          (q_11s)
          (q_11))
        (when
          (q_12s)
          (q_12))
        (when
          (q_13s)
          (q_13))
        (when
          (q_14s)
          (q_14))
        (when
          (q_15s)
          (q_15))
        (when
          (q_16s)
          (q_16))
        (when
          (q_17s)
          (q_17))
        (when
          (q_18s)
          (q_18))
        (when
          (q_18s)
          (not 
            (f_ok)))
        (not 
          (q_18t))
        (not 
          (f_sync))
        (not 
          (q_1s))
        (not 
          (q_2s))
        (not 
          (q_3s))
        (not 
          (q_4s))
        (not 
          (q_5s))
        (not 
          (q_6s))
        (not 
          (q_7s))
        (not 
          (q_8s))
        (not 
          (q_9s))
        (not 
          (q_10s))
        (not 
          (q_11s))
        (not 
          (q_12s))
        (not 
          (q_13s))
        (not 
          (q_14s))
        (not 
          (q_15s))
        (not 
          (q_16s))
        (not 
          (q_17s))
        (not 
          (q_18s))
      )
    )
)